// Code generated by "core generate"; DO NOT EDIT.

package glong

import (
	"cogentcore.org/core/gti"
)

var _ = gti.AddType(&gti.Type{Name: "github.com/emer/leabra/v2/glong.AlphaMaxLayer", IDName: "alpha-max-layer", Doc: "AlphaMaxLayer computes the maximum activation per neuron over the alpha cycle.\nNeeded for recording activations on layers with transient dynamics over alpha.", Embeds: []gti.Field{{Name: "Layer"}}, Fields: []gti.Field{{Name: "AlphaMaxCyc", Doc: "cycle upon which to start updating AlphaMax value"}, {Name: "AlphaMaxs", Doc: "per-neuron maximum activation value during alpha cycle"}}})

var _ = gti.AddType(&gti.Type{Name: "github.com/emer/leabra/v2/glong.GABABParams", IDName: "gabab-params", Doc: "GABABParams control the GABAB dynamics in PFC Maint neurons, based on Brunel & Wang (2001)\nparameters.  We have to do some things to make it work for rate code neurons..", Fields: []gti.Field{{Name: "RiseTau", Doc: "rise time for bi-exponential time dynamics of GABA-B"}, {Name: "DecayTau", Doc: "decay time for bi-exponential time dynamics of GABA-B"}, {Name: "Gbar", Doc: "overall strength multiplier of GABA-B current"}, {Name: "Gbase", Doc: "baseline level of GABA-B channels open independent of inhibitory input (is added to spiking-produced conductance)"}, {Name: "Smult", Doc: "multiplier for converting Gi from FFFB to GABA spikes"}, {Name: "MaxTime", Doc: "time offset when peak conductance occurs, in msec, computed from RiseTau and DecayTau"}, {Name: "TauFact", Doc: "time constant factor used in integration: (Decay / Rise) ^ (Rise / (Decay - Rise))"}}})

var _ = gti.AddType(&gti.Type{Name: "github.com/emer/leabra/v2/glong.Layer", IDName: "layer", Doc: "Layer has GABA-B and NMDA channels, with longer time-constants,\nto supports bistable activation dynamics including active maintenance\nin frontal cortex.  NMDA requires NMDAPrjn on relevant projections.\nIt also records AlphaMax = maximum activation within an AlphaCycle,\nwhich is important given the transient dynamics.", Embeds: []gti.Field{{Name: "Layer"}}, Fields: []gti.Field{{Name: "NMDA", Doc: "NMDA channel parameters plus more general params"}, {Name: "GABAB", Doc: "GABA-B / GIRK channel parameters"}, {Name: "GlNeurs", Doc: "slice of extra glong.Neuron state for this layer -- flat list of len = Shape.Len(). You must iterate over index and use pointer to modify values."}}})

var _ = gti.AddType(&gti.Type{Name: "github.com/emer/leabra/v2/glong.Network", IDName: "network", Doc: "glong.Network has methods for configuring specialized Glong network components.", Embeds: []gti.Field{{Name: "Network"}}})

var _ = gti.AddType(&gti.Type{Name: "github.com/emer/leabra/v2/glong.Neuron", IDName: "neuron", Doc: "Neuron holds the extra neuron (unit) level variables for glong computation.", Fields: []gti.Field{{Name: "AlphaMax", Doc: "Maximum activation over Alpha cycle period"}, {Name: "VmEff", Doc: "Effective membrane potential, including simulated backpropagating action potential contribution from activity level."}, {Name: "Gnmda", Doc: "net NMDA conductance, after Vm gating and Gbar -- added directly to Ge as it has the same reversal potential."}, {Name: "NMDA", Doc: "NMDA channel activation -- underlying time-integrated value with decay"}, {Name: "NMDASyn", Doc: "synaptic NMDA activation directly from projection(s)"}, {Name: "GgabaB", Doc: "net GABA-B conductance, after Vm gating and Gbar + Gbase -- set to Gk for GIRK, with .1 reversal potential."}, {Name: "GABAB", Doc: "GABA-B / GIRK activation -- time-integrated value with rise and decay time constants"}, {Name: "GABABx", Doc: "GABA-B / GIRK internal drive variable -- gets the raw activation and decays"}}})

var _ = gti.AddType(&gti.Type{Name: "github.com/emer/leabra/v2/glong.NMDAParams", IDName: "nmda-params", Doc: "NMDAParams control the NMDA dynamics in PFC Maint neurons, based on Brunel & Wang (2001)\nparameters.  We have to do some things to make it work for rate code neurons..", Fields: []gti.Field{{Name: "ActVm", Doc: "extra contribution to Vm associated with action potentials, on average -- produces key nonlinearity associated with spiking, from backpropagating action potentials.  0.4 seems good.."}, {Name: "AlphaMaxCyc", Doc: "cycle upon which to start updating AlphaMax value"}, {Name: "Tau", Doc: "decay time constant for NMDA current -- rise time is 2 msec and not worth extra effort for biexponential"}, {Name: "Gbar", Doc: "strength of NMDA current -- 0.02 is just over level sufficient to maintain in face of completely blank input"}}})

var _ = gti.AddType(&gti.Type{Name: "github.com/emer/leabra/v2/glong.NMDAPrjn", IDName: "nmda-prjn", Doc: "NMDAPrjn is a projection with NMDA maintenance channels.\nIt marks a projection for special treatment in a MaintLayer\nwhich actually does the NMDA computations.  Excitatory conductance is aggregated\nseparately for this projection.", Embeds: []gti.Field{{Name: "Prjn"}}})

var _ = gti.AddType(&gti.Type{Name: "github.com/emer/leabra/v2/glong.PrjnType", IDName: "prjn-type", Doc: "PrjnType has the GLong extensions to the emer.PrjnType types, for gui"})
